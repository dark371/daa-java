package com.shreyasWaphare;

import java.util.Arrays;

public class Main {

    public static void main(String[] args) {
        int w = 10;
        int n = 4;
        int[] wt = {1,3,4,6};
        int[] value = {20,30,10,50};

        int[][] mat = new int[n+1][w+1];

        for(int r=0;r<w+1;r++)
            mat[0][r]=0;
        for(int c=0;c<n+1;c++)
            mat[c][0]=0;

        for(int item=1;item<=n;item++)
        {
            for(int capacity=1;capacity<=w;capacity++)
            {
                int withoutCurrItem=mat[item-1][capacity];
                int withCurrItem = 0;

                int currWeight = wt[item-1];
                if(currWeight<=capacity)
                {
                    withCurrItem+=value[item-1];
                    int remainingCapacity = capacity-currWeight;
                    withCurrItem+=mat[item-1][remainingCapacity];
                }

                mat[item][capacity] = Math.max(withCurrItem,withoutCurrItem);
            }
        }
        System.out.println(mat[n][w]);
        System.out.println(Arrays.deepToString(mat));

    }
}
